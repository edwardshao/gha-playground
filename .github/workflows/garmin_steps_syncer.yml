name: Garmin Steps Syncer
on:
  workflow_dispatch:
  schedule:
    - cron: '0 19 * * *'  # UCT+8 03:00
    - cron: '0 3 * * *'   # UCT+8 11:00
    - cron: '0 11 * * *'  # UCT+8 19:00
jobs:
  sync_steps:
    runs-on: ubuntu-latest
    defaults:
        run:
            working-directory: ./garmin-steps-syncer
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run syncer
        env:
          GARMIN_TOKENS_BASE64: ${{ secrets.GARMIN_TOKENS_BASE64 }}
          GARMIN_STEPS_LAST_STARTGMT: ${{ vars.GARMIN_STEPS_LAST_STARTGMT }}
          GOOGLE_AUTH_USER_JSON_BASE64: ${{ secrets.GOOGLE_AUTH_USER_JSON_BASE64 }}
        run: |
          python garmin_steps_to_google_fit.py
      - name: Save the new_last_startGMT_file to variables
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_ACCESS_TOKEN }}
        run: |
          gh variable set 'GARMIN_STEPS_LAST_STARTGMT' < ./new_last_startGMT_file.txt
          echo "GARMIN_STEPS_LAST_STARTGMT is updated."
      - name: Save the refreshed_auth_user_json_base64_file to secrets if exists
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_ACCESS_TOKEN }}
        run: |
          if [ -f ./refreshed_auth_user_json_base64_file.txt ]; then
            gh secret set 'GOOGLE_AUTH_USER_JSON_BASE64' < ./refreshed_auth_user_json_base64_file.txt
            echo "GOOGLE_AUTH_USER_JSON_BASE64 is updated."
          else
            echo "No refreshed_auth_user_json_base64_file.txt found, skipping secret update."
          fi